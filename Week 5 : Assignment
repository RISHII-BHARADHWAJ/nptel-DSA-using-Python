1) The library at the Hogwarts School of Witchcraft and Wizardry has computerized its book issuing process. The relevant information is provided as text from standard input in three parts: information about books, information about borrowers and information about checkouts. Each part has a specific line format, described below.

Information about books
Line format: Accession Number~Title

Information about borrowers
Line format: Username~Full Name

Information about checkouts
Line format: Username~Accession Number~Due Date
Note: Due Date is in YYYY-MM-DD format.

You may assume that the data is internally consistent. For every checkout, there is a corresponding username and accession number in the input data, and no book is simultaneously checked out by two people.

Each section of the input starts with a line containing a single keyword. The first section begins with a line containing Books. The second section begins with a line containing Borrowers. The third section begins with a line containing Checkouts. The end of the input is marked by a line containing EndOfInput.

Write a Python program to read the data as described above and print out details about books that have been checked out. Each line should describe to one currently issued book in the following format:

Due Date~Full Name~Accession Number~Title
Your output should be sorted in increasing order of due date. For books due on the same date, sort in increasing order of full name.

Sol:-

def sort_key(i):
    r = list(map(int, i[1].split('-')))
    r.append(Borrowers[i[0][0]])
    r.append(i[0][1])
    return tuple(r)

current = 'Books'
Books = dict()
Borrowers = dict()
Checkouts = dict()

while True:
    line = input()

    if line == 'Books':
        current = line
        continue
    elif line == 'Borrowers':
        current = line
        continue
    elif line == 'Checkouts':
        current = line
        continue
    elif line == 'EndOfInput':
        break
    elif current == 'Books':
        bid, bname = line.split('~')
        Books[bid] = bname
    elif current == 'Borrowers':
        uid, name = line.split('~')
        Borrowers[uid] = name
    elif current == 'Checkouts':
        usr,acc_no,due_date = line.split('~')
        Checkouts[(usr,acc_no)] = due_date

output = sorted(Checkouts.items(), key = sort_key)

for i in output:
    line = i[1] + '~' + Borrowers[i[0][0]] + '~' + i[0][1] + '~' + Books[i[0][1]]
    print(line)
